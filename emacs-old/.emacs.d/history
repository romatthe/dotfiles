;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(buffer-name-history file-name-history minibuffer-history swiper-history ivy-history counsel-M-x-history))
(setq buffer-name-history '("init-edit.el"))
(setq file-name-history '(#("/home/romatthe/.dotfiles/emacs/.emacs.d/" 0 40 (ivy-index 0)) "~/.dotfiles/xmonad/.xmonad/xmonad.hs" "~/.dotfiles/xmonad/.xmonad/lib/Config/Options.hs" "~/.dotfiles/polybar/.config/polybar/config.ini" "~/.dotfiles/emacs/.emacs.d/custom.el" "~/.emacs.d/custom.el" "~/.dotfiles/xmonad/.xmonad/lib/Apps/Alias.hs" "~/.emacs.d/elpa/counsel-tramp-20190616.122/counsel-tramp-autoloads.el" "~/.emacs.d/elpa/counsel-world-clock-20190709.2211/counsel-world-clock-autoloads.el" "~/.emacs.d/elpa/flyspell-correct-ivy-20181205.1932/flyspell-correct-ivy-autoloads.el" "~/.emacs.d/elpa/flyspell-correct-20190408.1010/flyspell-correct-autoloads.el" "~/.emacs.d/elpa/ivy-xref-20190611.1305/ivy-xref-autoloads.el" "~/.emacs.d/elpa/ivy-yasnippet-20181002.1655/ivy-yasnippet-autoloads.el" "~/.emacs.d/elpa/counsel-projectile-20190325.856/counsel-projectile-autoloads.el" "~/.emacs.d/elpa/ivy-hydra-20190701.1716/ivy-hydra-autoloads.el" "~/.emacs.d/elpa/flx-20151030.1812/flx-autoloads.el" "~/.emacs.d/elpa/amx-20190419.330/amx-autoloads.el"))
(setq minibuffer-history '("romatthe"))
(setq swiper-history '(#("undo-tree" 0 9 (ivy-index 0)) #("undo" 0 4 (ivy-index 2)) "I aa" "font-6" #("font-" 0 5 (ivy-index 7)) #("font" 0 4 (ivy-index 17)) #("offset" 0 6 (ivy-index 4)) #("spaces" 0 6 (ivy-index 1)) #("#" 0 1 (ivy-index 7))))
(setq ivy-history '("init-edit.el" "emacs/.emacs.d/amx-items" "xmonad.hs" "config.ini" "xmonad.hs" #("config.ini" 0 10 (ivy-index 0)) "xmonad.hs" "xmonad.hs" "Options.hs" #("Options." 0 8 (ivy-index 0)) #("xmonad.hs" 0 9 (ivy-index 0)) #("modules." 0 8 (ivy-index 1)) #("stack.yaml" 0 10 (ivy-index 0)) #("Alias." 0 6 (ivy-index 0))))
(setq counsel-M-x-history '(#("all-the-icons-inst" 0 18 (ivy-index 0))))
(setq mark-ring 'nil)
(setq global-mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
(setq extended-command-history 'nil)
